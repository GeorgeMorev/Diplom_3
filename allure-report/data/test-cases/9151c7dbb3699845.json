{"uid":"9151c7dbb3699845","name":"test_total_done_counter_increases[firefox]","fullName":"tests.test_order_feed.TestOrderFeed#test_total_done_counter_increases","historyId":"ad626bef91f1cf96d7e3687195b5d519","time":{"start":1746474893902,"stop":1746474907306,"duration":13404},"description":"Проверка увеличения счётчика всех выполненных заказов после нового заказа","descriptionHtml":"<p>Проверка увеличения счётчика всех выполненных заказов после нового заказа</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_order_feed.TestOrderFeed object at 0x103074080>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"156731e9-ba57-4223-adef-39234a38a60e\")>\nlogin_user = {'email': 'test_140a58da-ce8f-4326-a115-e4ead1b48763@yandex.ru', 'name': 'Test User', 'password': '123456'}\nrequest = <FixtureRequest for <Function test_total_done_counter_increases[firefox]>>, open_page = <function open_page.<locals>._open at 0x1030ddee0>\n\n    @allure.description(\"Проверка увеличения счётчика всех выполненных заказов после нового заказа\")\n    def test_total_done_counter_increases(self, driver, login_user, request, open_page):\n        feed_page = open_page(FeedPage)\n        before = feed_page.get_total_done()\n>       request.getfixturevalue(\"create_order\")\n\ntests/test_order_feed.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup\n    return (yield)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\ntests/conftest.py:77: in create_order\n    WebDriverWait(driver, timeout=10).until(order_number_is_valid)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"156731e9-ba57-4223-adef-39234a38a60e\")>\nmethod = <function create_order.<locals>.order_number_is_valid at 0x1030df600>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1746474887809,"stop":1746474889391,"duration":1582},"status":"passed","steps":[{"name":"Выбираем браузер: firefox","time":{"start":1746474887809,"stop":1746474889391,"duration":1582},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"login_user","time":{"start":1746474889391,"stop":1746474893901,"duration":4510},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"open_page","time":{"start":1746474893902,"stop":1746474893902,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Проверка увеличения счётчика всех выполненных заказов после нового заказа","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_order_feed.TestOrderFeed object at 0x103074080>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"156731e9-ba57-4223-adef-39234a38a60e\")>\nlogin_user = {'email': 'test_140a58da-ce8f-4326-a115-e4ead1b48763@yandex.ru', 'name': 'Test User', 'password': '123456'}\nrequest = <FixtureRequest for <Function test_total_done_counter_increases[firefox]>>, open_page = <function open_page.<locals>._open at 0x1030ddee0>\n\n    @allure.description(\"Проверка увеличения счётчика всех выполненных заказов после нового заказа\")\n    def test_total_done_counter_increases(self, driver, login_user, request, open_page):\n        feed_page = open_page(FeedPage)\n        before = feed_page.get_total_done()\n>       request.getfixturevalue(\"create_order\")\n\ntests/test_order_feed.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:532: in getfixturevalue\n    fixturedef = self._get_active_fixturedef(argname)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:617: in _get_active_fixturedef\n    fixturedef.execute(request=subrequest)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:1091: in execute\n    result = ihook.pytest_fixture_setup(fixturedef=self, request=request)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/setuponly.py:36: in pytest_fixture_setup\n    return (yield)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:1140: in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/_pytest/fixtures.py:898: in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\ntests/conftest.py:77: in create_order\n    WebDriverWait(driver, timeout=10).until(order_number_is_valid)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"156731e9-ba57-4223-adef-39234a38a60e\")>\nmethod = <function create_order.<locals>.order_number_is_valid at 0x1030df600>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException","steps":[{"name":"Открытие страницы: https://stellarburgers.nomoreparties.site/feed","time":{"start":1746474893902,"stop":1746474894358,"duration":456},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Получение общего количества выполненных заказов за всё время","time":{"start":1746474894358,"stop":1746474895924,"duration":1566},"status":"passed","steps":[{"name":"Получение текста элемента: ('xpath', '//p[text()=\"Выполнено за все время:\"]/following-sibling::p')","time":{"start":1746474894358,"stop":1746474895924,"duration":1566},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3,"hasContent":true},"afterStages":[{"name":"login_user::0","time":{"start":1746474907362,"stop":1746474908530,"duration":1168},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1746474908532,"stop":1746474908994,"duration":462},"status":"passed","steps":[{"name":"Закрываем браузер","time":{"start":1746474908532,"stop":1746474908994,"duration":462},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"labels":[{"name":"feature","value":"Лента заказов"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_order_feed"},{"name":"subSuite","value":"TestOrderFeed"},{"name":"host","value":"MacBook-Pro-George.local"},{"name":"thread","value":"31487-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_order_feed"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"driver","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"9151c7dbb3699845.json","parameterValues":["'firefox'"]}