{"name": "test_user_orders_appear_in_feed[chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(@class, 'ingredient')]\"}\n  (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n0   chromedriver                        0x00000001010cee10 cxxbridge1$str$ptr + 2817040\n1   chromedriver                        0x00000001010c70ac cxxbridge1$str$ptr + 2784940\n2   chromedriver                        0x0000000100c0e8d8 cxxbridge1$string$len + 93028\n3   chromedriver                        0x0000000100c556a0 cxxbridge1$string$len + 383276\n4   chromedriver                        0x0000000100c967b8 cxxbridge1$string$len + 649796\n5   chromedriver                        0x0000000100c49a80 cxxbridge1$string$len + 335116\n6   chromedriver                        0x0000000101093c98 cxxbridge1$str$ptr + 2575000\n7   chromedriver                        0x0000000101096f64 cxxbridge1$str$ptr + 2588004\n8   chromedriver                        0x0000000101073a20 cxxbridge1$str$ptr + 2443296\n9   chromedriver                        0x00000001010977e0 cxxbridge1$str$ptr + 2590176\n10  chromedriver                        0x0000000101064b14 cxxbridge1$str$ptr + 2382100\n11  chromedriver                        0x00000001010b79c4 cxxbridge1$str$ptr + 2721732\n12  chromedriver                        0x00000001010b7b50 cxxbridge1$str$ptr + 2722128\n13  chromedriver                        0x00000001010c6cf8 cxxbridge1$str$ptr + 2783992\n14  libsystem_pthread.dylib             0x000000019ffc42e4 _pthread_start + 136\n15  libsystem_pthread.dylib             0x000000019ffbf0fc thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f78a2b53fe38104b4031700a2a853492\")>\nlogin_user = {'email': 'test_6db651b3-cf5d-4594-a932-abff79e78f8d@yandex.ru', 'name': 'Test User', 'password': '123456'}\n\n    @pytest.fixture\n    def create_order(driver, login_user):\n        from pages.main_page import MainPage\n    \n        page = MainPage(driver)\n        page.open()\n>       page.add_ingredient_to_burger()\n\ntests/conftest.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:37: in add_ingredient_to_burger\n    self.drag_and_drop(MainLocators.INGREDIENT, MainLocators.BASKET_LIST)\npages/base_page.py:46: in drag_and_drop\n    source = self.driver.find_element(*source_locator)\n.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv/lib/python3.9/site-packages/selenium/webdriver/remote/webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1045bad30>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...00019ffc42e4 _pthread_start + 136\\\\n15  libsystem_pthread.dylib             0x000000019ffbf0fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//a[contains(@class, 'ingredient')]\"}\nE         (Session info: chrome=135.0.7049.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       0   chromedriver                        0x00000001010cee10 cxxbridge1$str$ptr + 2817040\nE       1   chromedriver                        0x00000001010c70ac cxxbridge1$str$ptr + 2784940\nE       2   chromedriver                        0x0000000100c0e8d8 cxxbridge1$string$len + 93028\nE       3   chromedriver                        0x0000000100c556a0 cxxbridge1$string$len + 383276\nE       4   chromedriver                        0x0000000100c967b8 cxxbridge1$string$len + 649796\nE       5   chromedriver                        0x0000000100c49a80 cxxbridge1$string$len + 335116\nE       6   chromedriver                        0x0000000101093c98 cxxbridge1$str$ptr + 2575000\nE       7   chromedriver                        0x0000000101096f64 cxxbridge1$str$ptr + 2588004\nE       8   chromedriver                        0x0000000101073a20 cxxbridge1$str$ptr + 2443296\nE       9   chromedriver                        0x00000001010977e0 cxxbridge1$str$ptr + 2590176\nE       10  chromedriver                        0x0000000101064b14 cxxbridge1$str$ptr + 2382100\nE       11  chromedriver                        0x00000001010b79c4 cxxbridge1$str$ptr + 2721732\nE       12  chromedriver                        0x00000001010b7b50 cxxbridge1$str$ptr + 2722128\nE       13  chromedriver                        0x00000001010c6cf8 cxxbridge1$str$ptr + 2783992\nE       14  libsystem_pthread.dylib             0x000000019ffc42e4 _pthread_start + 136\nE       15  libsystem_pthread.dylib             0x000000019ffbf0fc thread_start + 8\n\n.venv/lib/python3.9/site-packages/selenium/webdriver/remote/errorhandler.py:232: NoSuchElementException"}, "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1745192087661, "stop": 1745192087661, "uuid": "9cb7e241-18c6-4c4f-88bc-3a15b1aa659b", "historyId": "e4f5a60bbc4d01ae4f9c7c20afce4231", "testCaseId": "3de10588365f0aff9aa7fd7c5246dc24", "fullName": "tests.test_order_feed.TestOrderFeed#test_user_orders_appear_in_feed", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "MacBook-Pro-Ulianna.local"}, {"name": "thread", "value": "48012-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}