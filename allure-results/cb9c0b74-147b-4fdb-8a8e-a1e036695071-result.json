{"name": "test_new_order_appears_in_progress[firefox]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Номер заказа не обновился", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"6dbe865b-ad96-454d-ac99-44f489308110\")>\nlogin_user = {'email': 'test_fe3b7c1e-693a-4a99-8bab-c8f4e7edd25c@yandex.ru', 'name': 'Test User', 'password': '123456'}\nopen_page = <function open_page.<locals>._open at 0x107a694e0>\n\n    @pytest.fixture\n    def create_order(driver, login_user, open_page):\n    \n        page = open_page(MainPage)\n        page.add_ingredient_to_burger()\n        page.click_place_order_button()\n    \n        with allure.step(\"Ожидание получения номера заказа\"):\n>           WebDriverWait(driver, timeout=10).until(\n                lambda d: page.get_order_number() != \"9999\",\n                \"Номер заказа не обновился\"\n            )\n\ntests/conftest.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6dbe865b-ad96-454d-ac99-44f489308110\")>, method = <function create_order.<locals>.<lambda> at 0x107a69440>\nmessage = 'Номер заказа не обновился'\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Номер заказа не обновился\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:146: TimeoutException"}, "description": "Проверка, что новый заказ отображается в списке заказов 'в работе'", "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1746893596437, "stop": 1746893596437, "uuid": "874c5e76-078d-4992-898f-dc7ef52247f0", "historyId": "edc0bcfe6d1f99c9fce79a5ee3b5300a", "testCaseId": "6bbe6a69c4a7c2657559878545f9ce96", "fullName": "tests.test_order_feed.TestOrderFeed#test_new_order_appears_in_progress", "labels": [{"name": "feature", "value": "Лента заказов"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "MacBook-Pro-George.local"}, {"name": "thread", "value": "50560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}